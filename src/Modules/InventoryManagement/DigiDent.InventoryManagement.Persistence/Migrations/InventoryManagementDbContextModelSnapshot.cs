// <auto-generated />
using System;
using DigiDent.InventoryManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigiDent.InventoryManagement.Persistence.Migrations
{
    [DbContext(typeof(InventoryManagementDbContext))]
    partial class InventoryManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("inventory_management")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Actions.InventoryAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ActionPerformerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionPerformerId");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("Actions", "inventory_management");
                });

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees", "inventory_management");
                });

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Items.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Items", "inventory_management");
                });

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Requests.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateOfRequest")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestedItemId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RequesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestedItemId");

                    b.HasIndex("RequesterId");

                    b.ToTable("Requests", "inventory_management");
                });

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Actions.InventoryAction", b =>
                {
                    b.HasOne("DigiDent.InventoryManagement.Domain.Employees.Employee", "ActionPerformer")
                        .WithMany("Actions")
                        .HasForeignKey("ActionPerformerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DigiDent.InventoryManagement.Domain.Items.InventoryItem", "InventoryItem")
                        .WithMany("InventoryActions")
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActionPerformer");

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Requests.Request", b =>
                {
                    b.HasOne("DigiDent.InventoryManagement.Domain.Items.InventoryItem", "RequestedItem")
                        .WithMany("Requests")
                        .HasForeignKey("RequestedItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiDent.InventoryManagement.Domain.Employees.Employee", "Requester")
                        .WithMany("Requests")
                        .HasForeignKey("RequesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RequestedItem");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Employees.Employee", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("DigiDent.InventoryManagement.Domain.Items.InventoryItem", b =>
                {
                    b.Navigation("InventoryActions");

                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
